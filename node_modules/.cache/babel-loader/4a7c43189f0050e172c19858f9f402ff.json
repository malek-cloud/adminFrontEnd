{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malek\\\\Desktop\\\\web\\\\react-try\\\\descovery\\\\src\\\\elements\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport Button from './Button';\nimport './FileUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileUpload = props => {\n  _s();\n\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false); // const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile; //let fileIsValid = isValid;\n\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true); //fileIsValid = true;\n    } else {\n      setIsValid(false); //fileIsValid = false;\n    } //    props.onInput(props.id, pickedFile, fileIsValid);\n\n  };\n\n  const pickImageHandler = () => {\n    props.refer.current.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: props.id,\n      ref: props.refer,\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: \".jpg,.png,.jpeg,.mkv,.mp3,.mp4,.wav\",\n      onChange: pickedHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `image-upload ${props.center && 'center'}`,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: pickImageHandler,\n        children: \"PICK FILE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-upload__preview\",\n        children: [previewUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewUrl,\n          alt: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 26\n        }, this), !previewUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You can pick a file.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), !isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileUpload, \"/53saevjNocQCOqE8FxW5pXJzQw=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/Users/malek/Desktop/web/react-try/descovery/src/elements/FileUpload.js"],"names":["React","useRef","useState","useEffect","Button","FileUpload","props","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","fileReader","FileReader","onload","result","readAsDataURL","pickedHandler","event","pickedFile","target","files","length","pickImageHandler","refer","current","click","id","display","center","errorText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC,CAH0B,CAK3B;;AAECC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACI,IAAL,EAAW;AACT;AACD;;AACD,UAAMM,UAAU,GAAG,IAAIC,UAAJ,EAAnB;;AACAD,IAAAA,UAAU,CAACE,MAAX,GAAoB,MAAM;AACxBL,MAAAA,aAAa,CAACG,UAAU,CAACG,MAAZ,CAAb;AACD,KAFD;;AAGAH,IAAAA,UAAU,CAACI,aAAX,CAAyBV,IAAzB;AACD,GATQ,EASN,CAACA,IAAD,CATM,CAAT;;AAWA,QAAMW,aAAa,GAAGC,KAAK,IAAI;AAC7B,QAAIC,UAAJ,CAD6B,CAE7B;;AACA,QAAID,KAAK,CAACE,MAAN,CAAaC,KAAb,IAAsBH,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,KAA8B,CAAxD,EAA2D;AACzDH,MAAAA,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACAd,MAAAA,OAAO,CAACY,UAAD,CAAP;AACAR,MAAAA,UAAU,CAAC,IAAD,CAAV,CAHyD,CAIzD;AACD,KALD,MAKO;AACLA,MAAAA,UAAU,CAAC,KAAD,CAAV,CADK,CAEL;AACD,KAX4B,CAYjC;;AACG,GAbD;;AAeA,QAAMY,gBAAgB,GAAG,MAAM;AAC7BlB,IAAAA,KAAK,CAACmB,KAAN,CAAYC,OAAZ,CAAoBC,KAApB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AACE,MAAA,EAAE,EAAErB,KAAK,CAACsB,EADZ;AAEE,MAAA,GAAG,EAAEtB,KAAK,CAACmB,KAFb;AAGE,MAAA,KAAK,EAAE;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAHT;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,MAAM,EAAC,qCALT;AAME,MAAA,QAAQ,EAAEX;AANZ;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAG,gBAAeZ,KAAK,CAACwB,MAAN,IAAgB,QAAS,EAAzD;AAAA,8BACA,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEN,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,mBACGf,UAAU,iBAAI;AAAK,UAAA,GAAG,EAAEA,UAAV;AAAsB,UAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADjB,EAEG,CAACA,UAAD,iBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,EAmBG,CAACE,OAAD,iBAAY;AAAA,gBAAIL,KAAK,CAACyB;AAAV;AAAA;AAAA;AAAA;AAAA,YAnBf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA5DD;;GAAM1B,U;;KAAAA,U;AA8DN,eAAeA,UAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './FileUpload.css';\r\n\r\nconst FileUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n // const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    //let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      //fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      //fileIsValid = false;\r\n    }\r\n//    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    props.refer.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={props.refer}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg,.mkv,.mp3,.mp4,.wav\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n      <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK FILE\r\n        </Button>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>You can pick a file.</p>}\r\n        </div>\r\n        \r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"]},"metadata":{},"sourceType":"module"}