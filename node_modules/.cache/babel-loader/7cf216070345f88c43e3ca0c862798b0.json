{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malek\\\\Desktop\\\\web\\\\react-try\\\\descovery\\\\src\\\\app.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport useAuth from \"./hooks/auth-hook\";\nimport { AuthContext } from \"./context/authContext\";\nimport Body from \"./components/Body\";\nimport NavigationBar from \"./components/navigationBar\";\nimport LogIn from \"./coach/LogInEmployee\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    token,\n    login,\n    logout,\n    userId\n  } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Body, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(LogIn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      },\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WXmOZgoSMemUdSCdwDnD15BCPVc=\", false, function () {\n  return [useAuth];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/malek/Desktop/web/react-try/descovery/src/app.js"],"names":["React","Redirect","useAuth","AuthContext","Body","NavigationBar","LogIn","App","token","login","logout","userId","routes","isLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,QADF,QAEO,kBAFP;AAGA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,MAAmCT,OAAO,EAAhD;AACA,MAAIU,MAAJ;;AAEA,MAAGJ,KAAH,EACA;AACGI,IAAAA,MAAM,gBACL;AAAA,8BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GARD,MASK;AACD;AAAA,YAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AACH;;AACH,sBACE;AAAA,2BAGE,QAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,CAAC,CAACL,KADT;AAELA,QAAAA,KAAK,EAAEA,KAFF;AAGLG,QAAAA,MAAM,EAAEA,MAHH;AAILF,QAAAA,KAAK,EAAEA,KAJF;AAKLC,QAAAA,MAAM,EAAEA;AALH,OADT;AAAA,6BASI;AAAA,kBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAlCQL,G;UACoCL,O;;;KADpCK,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Redirect, \r\n} from \"react-router-dom\";\r\nimport useAuth from \"./hooks/auth-hook\";\r\nimport { AuthContext } from \"./context/authContext\";\r\n\r\nimport Body from \"./components/Body\"\r\nimport NavigationBar from \"./components/navigationBar\";\r\nimport LogIn from \"./coach/LogInEmployee\";\r\nfunction App() {\r\n    const { token, login, logout, userId } = useAuth();\r\n    let routes;\r\n   \r\n    if(token)\r\n    {\r\n      (routes = (\r\n        <div>\r\n          <NavigationBar />\r\n          <Body />\r\n        </div>\r\n      ))\r\n    }\r\n    else {\r\n        <LogIn />\r\n    }\r\n  return (\r\n    <div>\r\n     \r\n      \r\n      <AuthContext.Provider\r\n        value={{\r\n          isLoggedIn: !!token,\r\n          token: token,\r\n          userId: userId,\r\n          login: login,\r\n          logout: logout,\r\n        }}\r\n      >\r\n          <main>{routes}</main>\r\n        \r\n      </AuthContext.Provider>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}