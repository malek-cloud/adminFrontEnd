{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malek\\\\Desktop\\\\web\\\\react-try\\\\descovery\\\\src\\\\app.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useAuth from \"./hooks/auth-hook\";\nimport { AuthContext } from \"./context/authContext\";\nimport ConnectAdmin from \"./coach/connectAdmin\";\nimport ConnectSup from \"./coach/connectSup\";\nimport LogIn from \"./coach/LogInEmployee\";\nimport All from \"./components/all\";\nimport { Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    token,\n    login,\n    logout,\n    EmployeeId\n  } = useAuth();\n  let routes;\n\n  if (EmployeeId.typeEmployee === \"administrateur\") {\n    routes = ( /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/admin\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(ConnectAdmin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(All, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 19\n    }, this));\n  } else if (EmployeeId.typeEmployee === \"Superviseur\") {\n    routes = ( /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/sup\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(All, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(All, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }, this));\n  } else if (EmployeeId.typeEmployee === \"coach\") {\n    routes = /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/accueil\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(All, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this);\n  } else routes = /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    exact: true,\n    children: /*#__PURE__*/_jsxDEV(LogIn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: !!token,\n        token: token,\n        EmployeeId: EmployeeId,\n        login: login,\n        logout: logout\n      },\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QcPEkF89rd+kn6m2x6kk6a/l/C0=\", false, function () {\n  return [useAuth];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/malek/Desktop/web/react-try/descovery/src/app.js"],"names":["React","useAuth","AuthContext","ConnectAdmin","ConnectSup","LogIn","All","Route","App","token","login","logout","EmployeeId","routes","typeEmployee","isLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,KAAT,QAAsB,kBAAtB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,MAAuCX,OAAO,EAApD;AACA,MAAIY,MAAJ;;AAGE,MAAID,UAAU,CAACE,YAAX,KAA4B,gBAAhC,EAAkD;AAChDD,IAAAA,MAAM,IACJ,sBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,MAA1B;AAAA,6BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,2BAEU,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAHN,CAAN;AAKD,GAND,MAMO,IAAID,UAAU,CAACE,YAAX,KAA4B,aAAhC,EAA+C;AACpDD,IAAAA,MAAM,IACJ,sBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,MAAxB;AAAA,6BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,2BAEU,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAHN,CAAN;AAKD,GANM,MAMA,IAAID,UAAU,CAACE,YAAX,KAA4B,OAAhC,EAAyC;AAC9CD,IAAAA,MAAM,gBACJ,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,KAAK,MAA5B;AAAA,6BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GANM,MAOFA,MAAM,gBACT,QAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAA,2BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADG;;AAMP,sBACE;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AACLE,QAAAA,UAAU,EAAE,CAAC,CAACN,KADT;AAELA,QAAAA,KAAK,EAAEA,KAFF;AAGLG,QAAAA,UAAU,EAAEA,UAHP;AAILF,QAAAA,KAAK,EAAEA,KAJF;AAKLC,QAAAA,MAAM,EAAEA;AALH,OADT;AAAA,6BASE;AAAA,kBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA7CQL,G;UACsCP,O;;;KADtCO,G;AA8CT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\r\nimport useAuth from \"./hooks/auth-hook\";\r\nimport { AuthContext } from \"./context/authContext\";\r\nimport ConnectAdmin from \"./coach/connectAdmin\";\r\nimport ConnectSup from \"./coach/connectSup\";\r\nimport LogIn from \"./coach/LogInEmployee\";\r\nimport All from \"./components/all\";\r\nimport { Route } from \"react-router-dom\";\r\nfunction App() {\r\n  const { token, login, logout, EmployeeId } = useAuth();\r\n  let routes;\r\n\r\n \r\n    if (EmployeeId.typeEmployee === \"administrateur\") {\r\n      routes = (\r\n        <Route path=\"/admin\" exact>\r\n          <ConnectAdmin />\r\n        </Route>, <All />\r\n      );\r\n    } else if (EmployeeId.typeEmployee === \"Superviseur\") {\r\n      routes = (\r\n        <Route path=\"/sup\" exact>\r\n          <All />\r\n        </Route>, <All />\r\n      );\r\n    } else if (EmployeeId.typeEmployee === \"coach\") {\r\n      routes = (\r\n        <Route path=\"/accueil\" exact>\r\n          <All />\r\n        </Route>\r\n      );\r\n    }\r\n    else routes = (\r\n      <Route path=\"/\" exact>\r\n        <LogIn />\r\n      </Route> \r\n    );\r\n  \r\n  return (\r\n    <div>\r\n      <AuthContext.Provider\r\n        value={{\r\n          isLoggedIn: !!token,\r\n          token: token,\r\n          EmployeeId: EmployeeId,\r\n          login: login,\r\n          logout: logout,\r\n        }}\r\n      >\r\n        <main>{routes}</main>\r\n      </AuthContext.Provider>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}