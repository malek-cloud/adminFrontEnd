{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect, useContext } from 'react';\nimport AuthContext from '../context/authContext';\nlet logoutTimer;\n\nconst useAuth = () => {\n  _s();\n\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [EmployeeId, setEmployeeId] = useState({});\n  const [enterAS, setEnterAS] = useState(\"\"); // const [employ, setEmployee] = useState(null);\n  // const auth = useContext(AuthContext);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setEmployeeId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem('userData', JSON.stringify({\n      EmployeeId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n  }, []);\n  const enterType = useCallback(enterAS => {\n    setEnterAS(enterAS);\n    localStorage.setItem('usageType', JSON.stringify({\n      enterAS: enterAS\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setEmployeeId({});\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.EmployeeId, storedData.token, new Date(storedData.expiration));\n      console.log(storedData.EmployeeId);\n    }\n  }, [login]);\n  return {\n    token,\n    login,\n    logout,\n    enterType,\n    EmployeeId\n  };\n};\n\n_s(useAuth, \"3bioK2MJxqKv1WcQk67P6gIRDuM=\");\n\nexport default useAuth;","map":{"version":3,"sources":["C:/Users/malek/Desktop/web/react-try/descovery/src/hooks/auth-hook.js"],"names":["useState","useCallback","useEffect","useContext","AuthContext","logoutTimer","useAuth","token","setToken","tokenExpirationDate","setTokenExpirationDate","EmployeeId","setEmployeeId","enterAS","setEnterAS","login","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","enterType","logout","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","console","log"],"mappings":"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","sourcesContent":["import { useState, useCallback, useEffect , useContext} from 'react';\r\nimport  AuthContext  from '../context/authContext';\r\nlet logoutTimer;\r\n\r\n const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [EmployeeId, setEmployeeId] = useState({});\r\n  const [enterAS, setEnterAS] = useState(\"\");\r\n // const [employ, setEmployee] = useState(null);\r\n // const auth = useContext(AuthContext);\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setEmployeeId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        EmployeeId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString()\r\n      })\r\n    );\r\n    \r\n  }, []);\r\n  const enterType = useCallback(( enterAS) => {\r\n    setEnterAS(enterAS);\r\n    localStorage.setItem(\r\n      'usageType',\r\n      JSON.stringify({\r\n        enterAS: enterAS\r\n      })\r\n    );\r\n    \r\n  }, []);\r\n\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setEmployeeId({});\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(storedData.EmployeeId, storedData.token, new Date(storedData.expiration));\r\n      console.log(storedData.EmployeeId);\r\n    }\r\n  }, [login]);\r\n \r\n  return { token, login, logout,enterType, EmployeeId };\r\n};\r\nexport default useAuth ;"]},"metadata":{},"sourceType":"module"}