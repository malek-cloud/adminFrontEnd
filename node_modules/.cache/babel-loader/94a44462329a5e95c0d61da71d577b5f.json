{"ast":null,"code":"import _slicedToArray from\"C:/Users/malek/Desktop/web/react-try/descovery/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useEffect}from'react';import Button from'./Button';import'./FileUpload.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FileUpload=function FileUpload(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),file=_useState2[0],setFile=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),previewUrl=_useState4[0],setPreviewUrl=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isValid=_useState6[0],setIsValid=_useState6[1];var filePickerRef=useRef();useEffect(function(){if(!file){return;}var fileReader=new FileReader();fileReader.onload=function(){setPreviewUrl(fileReader.result);};fileReader.readAsDataURL(file);},[file]);var pickedHandler=function pickedHandler(event){var pickedFile;//let fileIsValid = isValid;\nif(event.target.files&&event.target.files.length===1){pickedFile=event.target.files[0];setFile(pickedFile);setIsValid(true);//fileIsValid = true;\n}else{setIsValid(false);//fileIsValid = false;\n}//    props.onInput(props.id, pickedFile, fileIsValid);\n};var pickImageHandler=function pickImageHandler(){filePickerRef.current.click();props.getFile(file);};return/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsx(\"input\",{id:props.id,ref:filePickerRef,style:{display:'none'},type:\"file\",accept:\".jpg,.png,.jpeg,.mkv,.mp3,.mp4,.wav\",onChange:pickedHandler}),/*#__PURE__*/_jsxs(\"div\",{className:\"image-upload \".concat(props.center&&'center'),children:[/*#__PURE__*/_jsx(Button,{type:\"button\",onClick:pickImageHandler,children:\"PICK FILE\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"image-upload__preview\",children:[previewUrl&&/*#__PURE__*/_jsx(\"img\",{src:previewUrl,alt:\"Preview\"}),!previewUrl&&/*#__PURE__*/_jsx(\"p\",{children:\"You can pick a file.\"})]})]}),!isValid&&/*#__PURE__*/_jsx(\"p\",{children:props.errorText})]});};export default FileUpload;","map":{"version":3,"sources":["C:/Users/malek/Desktop/web/react-try/descovery/src/elements/FileUpload.js"],"names":["React","useRef","useState","useEffect","Button","FileUpload","props","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","pickedHandler","event","pickedFile","target","files","length","pickImageHandler","current","click","getFile","id","display","center","errorText"],"mappings":"iIAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,CAAkCC,SAAlC,KAAmD,OAAnD,CAEA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAO,kBAAP,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CAC1B,cAAwBJ,QAAQ,EAAhC,wCAAOK,IAAP,eAAaC,OAAb,eACA,eAAoCN,QAAQ,EAA5C,yCAAOO,UAAP,eAAmBC,aAAnB,eACA,eAA8BR,QAAQ,CAAC,KAAD,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,aAAa,CAAGZ,MAAM,EAA5B,CAEAE,SAAS,CAAC,UAAM,CACd,GAAI,CAACI,IAAL,CAAW,CACT,OACD,CACD,GAAMO,CAAAA,UAAU,CAAG,GAAIC,CAAAA,UAAJ,EAAnB,CACAD,UAAU,CAACE,MAAX,CAAoB,UAAM,CACxBN,aAAa,CAACI,UAAU,CAACG,MAAZ,CAAb,CACD,CAFD,CAGAH,UAAU,CAACI,aAAX,CAAyBX,IAAzB,EACD,CATQ,CASN,CAACA,IAAD,CATM,CAAT,CAWA,GAAMY,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,CAC7B,GAAIC,CAAAA,UAAJ,CACA;AACA,GAAID,KAAK,CAACE,MAAN,CAAaC,KAAb,EAAsBH,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,GAA8B,CAAxD,CAA2D,CACzDH,UAAU,CAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb,CACAf,OAAO,CAACa,UAAD,CAAP,CACAT,UAAU,CAAC,IAAD,CAAV,CACA;AACD,CALD,IAKO,CACLA,UAAU,CAAC,KAAD,CAAV,CACA;AACD,CACL;AACG,CAbD,CAeA,GAAMa,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAE7BZ,aAAa,CAACa,OAAd,CAAsBC,KAAtB,GACArB,KAAK,CAACsB,OAAN,CAAcrB,IAAd,EACD,CAJD,CAMA,mBACE,aAAK,SAAS,CAAC,cAAf,wBACE,cACE,EAAE,CAAED,KAAK,CAACuB,EADZ,CAEE,GAAG,CAAEhB,aAFP,CAGE,KAAK,CAAE,CAAEiB,OAAO,CAAE,MAAX,CAHT,CAIE,IAAI,CAAC,MAJP,CAKE,MAAM,CAAC,qCALT,CAME,QAAQ,CAAEX,aANZ,EADF,cASE,aAAK,SAAS,wBAAkBb,KAAK,CAACyB,MAAN,EAAgB,QAAlC,CAAd,wBACA,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEN,gBAA/B,uBADA,cAIE,aAAK,SAAS,CAAC,uBAAf,WACGhB,UAAU,eAAI,YAAK,GAAG,CAAEA,UAAV,CAAsB,GAAG,CAAC,SAA1B,EADjB,CAEG,CAACA,UAAD,eAAe,2CAFlB,GAJF,GATF,CAmBG,CAACE,OAAD,eAAY,mBAAIL,KAAK,CAAC0B,SAAV,EAnBf,GADF,CAuBD,CA9DD,CAgEA,cAAe3B,CAAAA,UAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './FileUpload.css';\r\n\r\nconst FileUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    //let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      //fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      //fileIsValid = false;\r\n    }\r\n//    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n  \r\n    filePickerRef.current.click();\r\n    props.getFile(file) ;\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg,.mkv,.mp3,.mp4,.wav\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n      <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK FILE\r\n        </Button>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>You can pick a file.</p>}\r\n        </div>\r\n        \r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"]},"metadata":{},"sourceType":"module"}