{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malek\\\\Desktop\\\\web\\\\react-try\\\\descovery\\\\src\\\\components\\\\Articles.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Articles(props) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedArticles, setLoadingArticles] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        setIsLoading(true);\n        const responseData = await fetch(\"http://localhost:5000/posts\");\n        setLoadingArticles(responseData.posts);\n      } catch (err) {}\n    };\n\n    setIsLoading(false);\n  }, [loadedArticles]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n  return loadedArticles.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No articles yet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"(\", loadedArticles.map(article => /*#__PURE__*/_jsxDEV(\"article\", {\n      creator: article.creator,\n      title: article.title,\n      content: article.content // image={article.image}\n\n    }, article.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Articles, \"9cyiEYil9C9YQtcbtESVtfNDu6A=\");\n\n_c = Articles;\nexport default Articles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Articles\");","map":{"version":3,"sources":["C:/Users/malek/Desktop/web/react-try/descovery/src/components/Articles.js"],"names":["useState","useEffect","Articles","props","isLoading","setIsLoading","loadedArticles","setLoadingArticles","fetchPosts","responseData","fetch","posts","err","length","map","article","creator","title","content","id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,cAAD,EAAiBC,kBAAjB,IAAuCP,QAAQ,CAAC,EAAD,CAArD;AAGEC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,UAAU,GAAG,YAAY;AAC7B,UAAI;AACFH,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,cAAMI,YAAY,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAhC;AAEAH,QAAAA,kBAAkB,CAACE,YAAY,CAACE,KAAd,CAAlB;AACD,OALD,CAKE,OAAOC,GAAP,EAAY,CAAE;AACjB,KAPD;;AAQAP,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAVQ,EAUN,CAACC,cAAD,CAVM,CAAT;;AAaF,MAAIF,SAAJ,EAAe;AACb,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,SAAOE,cAAc,CAACO,MAAf,KAA0B,CAA1B,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL;AAAA,oBAEGP,cAAc,CAACQ,GAAf,CAAoBC,OAAD,iBAClB;AAEE,MAAA,OAAO,EAAEA,OAAO,CAACC,OAFnB;AAGE,MAAA,KAAK,EAAED,OAAO,CAACE,KAHjB;AAIE,MAAA,OAAO,EAAEF,OAAO,CAACG,OAJnB,CAKE;;AALF,OACOH,OAAO,CAACI,EADf;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAiBD;;GA1CQjB,Q;;KAAAA,Q;AA2CT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nfunction Articles(props) {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [loadedArticles, setLoadingArticles] = useState([]);\r\n \r\n    \r\n    useEffect(() => {\r\n      const fetchPosts = async () => {\r\n        try {\r\n          setIsLoading(true)\r\n          const responseData = await fetch(\"http://localhost:5000/posts\")\r\n  \r\n          setLoadingArticles(responseData.posts);\r\n        } catch (err) {}\r\n      };\r\n      setIsLoading(false);\r\n    }, [loadedArticles]);\r\n  \r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div>\r\n        <p>Loading..</p>\r\n      </div>\r\n    );\r\n  }\r\n  return loadedArticles.length === 0 ? (\r\n    <div>No articles yet</div>\r\n  ) : (\r\n    <div>\r\n      (\r\n      {loadedArticles.map((article) => (\r\n        <article\r\n          key={article.id}\r\n          creator={article.creator}\r\n          title={article.title}\r\n          content={article.content}\r\n          // image={article.image}\r\n        />\r\n      ))}\r\n      )\r\n    </div>\r\n  );\r\n}\r\nexport default Articles;\r\n"]},"metadata":{},"sourceType":"module"}