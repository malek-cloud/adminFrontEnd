{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect, useContext } from 'react';\nimport AuthContext from '../context/authContext';\nlet logoutTimer;\n\nconst useAuth = () => {\n  _s();\n\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [EmployeeId, setEmployeeId] = useState({}); // const [employ, setEmployee] = useState(null);\n  // const auth = useContext(AuthContext);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setEmployeeId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem('userData', JSON.stringify({\n      EmployeeId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n    /*try {\r\n      \r\n      console.log(EmployeeId);\r\n      fetch(`http://localhost:5000/employee/employee/:${EmployeeId}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"emplyee data mte3i\" + data);\r\n          setEmployee(data.employee);\r\n          auth.employee = employ ;\r\n        });\r\n    } catch (err) {} ;*/\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setEmployeeId({});\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.EmployeeId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  return {\n    token,\n    login,\n    logout,\n    EmployeeId\n  };\n};\n\n_s(useAuth, \"rrmviHlCBqasJ6tLmSdQsCDYbe0=\");\n\nexport default useAuth;","map":{"version":3,"sources":["C:/Users/malek/Desktop/web/react-try/descovery/src/hooks/auth-hook.js"],"names":["useState","useCallback","useEffect","useContext","AuthContext","logoutTimer","useAuth","token","setToken","tokenExpirationDate","setTokenExpirationDate","EmployeeId","setEmployeeId","login","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,EAA4CC,UAA5C,QAA6D,OAA7D;AACA,OAAQC,WAAR,MAA0B,wBAA1B;AACA,IAAIC,WAAJ;;AAEC,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACS,mBAAD,EAAsBC,sBAAtB,IAAgDV,QAAQ,EAA9D;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C,CAHqB,CAItB;AACA;;AACC,QAAMa,KAAK,GAAGZ,WAAW,CAAC,CAACa,GAAD,EAAMP,KAAN,EAAaQ,cAAb,KAAgC;AACxDP,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAK,IAAAA,aAAa,CAACE,GAAD,CAAb;AACA,UAAML,mBAAmB,GACvBM,cAAc,IAAI,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,OAAO,EAAP,GAAY,EAA5C,CADpB;AAEAP,IAAAA,sBAAsB,CAACD,mBAAD,CAAtB;AACAS,IAAAA,YAAY,CAACC,OAAb,CACE,UADF,EAEEC,IAAI,CAACC,SAAL,CAAe;AACbV,MAAAA,UAAU,EAAEG,GADC;AAEbP,MAAAA,KAAK,EAAEA,KAFM;AAGbe,MAAAA,UAAU,EAAEb,mBAAmB,CAACc,WAApB;AAHC,KAAf,CAFF;AAQA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEG,GA1BwB,EA0BtB,EA1BsB,CAAzB;AA4BA,QAAMC,MAAM,GAAGvB,WAAW,CAAC,MAAM;AAC/BO,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAM,IAAAA,YAAY,CAACO,UAAb,CAAwB,UAAxB;AACD,GALyB,EAKvB,EALuB,CAA1B;AAOAvB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,KAAK,IAAIE,mBAAb,EAAkC;AAChC,YAAMiB,aAAa,GAAGjB,mBAAmB,CAACQ,OAApB,KAAgC,IAAID,IAAJ,GAAWC,OAAX,EAAtD;AACAZ,MAAAA,WAAW,GAAGsB,UAAU,CAACH,MAAD,EAASE,aAAT,CAAxB;AACD,KAHD,MAGO;AACLE,MAAAA,YAAY,CAACvB,WAAD,CAAZ;AACD;AACF,GAPQ,EAON,CAACE,KAAD,EAAQiB,MAAR,EAAgBf,mBAAhB,CAPM,CAAT;AASAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2B,UAAU,GAAGT,IAAI,CAACU,KAAL,CAAWZ,YAAY,CAACa,OAAb,CAAqB,UAArB,CAAX,CAAnB;;AACA,QACEF,UAAU,IACVA,UAAU,CAACtB,KADX,IAEA,IAAIS,IAAJ,CAASa,UAAU,CAACP,UAApB,IAAkC,IAAIN,IAAJ,EAHpC,EAIE;AACAH,MAAAA,KAAK,CAACgB,UAAU,CAAClB,UAAZ,EAAwBkB,UAAU,CAACtB,KAAnC,EAA0C,IAAIS,IAAJ,CAASa,UAAU,CAACP,UAApB,CAA1C,CAAL;AACD;AACF,GATQ,EASN,CAACT,KAAD,CATM,CAAT;AAWA,SAAO;AAAEN,IAAAA,KAAF;AAASM,IAAAA,KAAT;AAAgBW,IAAAA,MAAhB;AAAwBb,IAAAA;AAAxB,GAAP;AACD,CA9DA;;GAAML,O;;AA+DP,eAAeA,OAAf","sourcesContent":["import { useState, useCallback, useEffect , useContext} from 'react';\r\nimport  AuthContext  from '../context/authContext';\r\nlet logoutTimer;\r\n\r\n const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [EmployeeId, setEmployeeId] = useState({});\r\n // const [employ, setEmployee] = useState(null);\r\n // const auth = useContext(AuthContext);\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setEmployeeId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        EmployeeId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString()\r\n      })\r\n    );\r\n    /*try {\r\n      \r\n      console.log(EmployeeId);\r\n      fetch(`http://localhost:5000/employee/employee/:${EmployeeId}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"emplyee data mte3i\" + data);\r\n          setEmployee(data.employee);\r\n          auth.employee = employ ;\r\n        });\r\n    } catch (err) {} ;*/\r\n    \r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setEmployeeId({});\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(storedData.EmployeeId, storedData.token, new Date(storedData.expiration));\r\n    }\r\n  }, [login]);\r\n \r\n  return { token, login, logout, EmployeeId };\r\n};\r\nexport default useAuth ;"]},"metadata":{},"sourceType":"module"}