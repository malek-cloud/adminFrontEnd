{"ast":null,"code":"import _slicedToArray from\"C:/Users/malek/Desktop/web/react-try/descovery/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useCallback,useEffect}from'react';var logoutTimer;var useAuth=function useAuth(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),token=_useState2[0],setToken=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),tokenExpirationDate=_useState4[0],setTokenExpirationDate=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),EmployeeId=_useState6[0],setEmployeeId=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),enterAs=_useState8[0],setEnterAs=_useState8[1];var login=useCallback(function(uid,token,expirationDate){setToken(token);setEmployeeId(uid);var tokenExpirationDate=expirationDate||new Date(new Date().getTime()+1000*60*60);setTokenExpirationDate(tokenExpirationDate);localStorage.setItem('userData',JSON.stringify({EmployeeId:uid,token:token,expiration:tokenExpirationDate.toISOString()}));},[]);var enterType=useCallback(function(enterAs){setEnterAs(enterAs);localStorage.setItem('usageType',JSON.stringify({enterAs:enterAs}));},[]);var logout=useCallback(function(){setToken(null);setEnterAs(\"\");setTokenExpirationDate(null);setEmployeeId({});localStorage.removeItem('userData');localStorage.removeItem('usageType');},[]);useEffect(function(){if(token&&tokenExpirationDate){var remainingTime=tokenExpirationDate.getTime()-new Date().getTime();logoutTimer=setTimeout(logout,remainingTime);}else{clearTimeout(logoutTimer);}},[token,logout,tokenExpirationDate]);useEffect(function(){var storedData=JSON.parse(localStorage.getItem('userData'));if(storedData&&storedData.token&&new Date(storedData.expiration)>new Date()){login(storedData.EmployeeId,storedData.token,new Date(storedData.expiration));console.log(storedData.EmployeeId);}},[login]);return{token:token,enterAs:enterAs,login:login,logout:logout,enterType:enterType,EmployeeId:EmployeeId};};export default useAuth;","map":{"version":3,"sources":["C:/Users/malek/Desktop/web/react-try/descovery/src/hooks/auth-hook.js"],"names":["useState","useCallback","useEffect","logoutTimer","useAuth","token","setToken","tokenExpirationDate","setTokenExpirationDate","EmployeeId","setEmployeeId","enterAs","setEnterAs","login","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","enterType","logout","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","console","log"],"mappings":"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","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\r\nlet logoutTimer;\r\n\r\n const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [EmployeeId, setEmployeeId] = useState({});\r\n  const [enterAs, setEnterAs] = useState(\"\");\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setEmployeeId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        EmployeeId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString()\r\n      })\r\n    );\r\n    \r\n  }, []);\r\n  const enterType = useCallback(( enterAs) => {\r\n    setEnterAs(enterAs);\r\n    localStorage.setItem(\r\n      'usageType',\r\n      JSON.stringify({\r\n        enterAs: enterAs\r\n      })\r\n    );\r\n    \r\n  }, []);\r\n\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setEnterAs(\"\");\r\n    setTokenExpirationDate(null);\r\n    setEmployeeId({});\r\n    localStorage.removeItem('userData');\r\n    localStorage.removeItem('usageType');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(storedData.EmployeeId, storedData.token, new Date(storedData.expiration));\r\n      console.log(storedData.EmployeeId);\r\n    }\r\n  }, [login]);\r\n \r\n  return { token,enterAs, login, logout,enterType, EmployeeId };\r\n};\r\nexport default useAuth ;"]},"metadata":{},"sourceType":"module"}