{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malek\\\\Desktop\\\\web\\\\react-try\\\\descovery\\\\src\\\\app.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useAuth from \"./hooks/auth-hook\";\nimport { AuthContext } from \"./context/authContext\";\nimport ConnectAdmin from \"./coach/connectAdmin\";\nimport ConnectSup from \"./coach/connectSup\";\nimport Body from \"./components/Body\";\nimport NavigationBar from \"./components/navigationBar\";\nimport LogIn from \"./coach/LogInEmployee\";\nimport All from \"./components/all\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    token,\n    login,\n    logout,\n    EmployeeId\n  } = useAuth();\n  let routes;\n\n  if (token) {\n    switch (EmployeeId.typeEmployee) {\n      case \"Administrateur\":\n        routes = /*#__PURE__*/_jsxDEV(ConnectAdmin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 18\n        }, this);\n        return routes;\n\n      case \"Superviseur\":\n        routes = /*#__PURE__*/_jsxDEV(Router, {\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              exact: true,\n              component: ConnectSup\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/home\",\n              exact: true,\n              component: All\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this);\n        return routes;\n\n      case \"Coach\":\n        routes = /*#__PURE__*/_jsxDEV(All, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 18\n        }, this);\n        return routes;\n\n      default:\n        return routes = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"error \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 26\n        }, this);\n    }\n  } else {\n    routes = /*#__PURE__*/_jsxDEV(LogIn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: !!token,\n        token: token,\n        EmployeeId: EmployeeId,\n        login: login,\n        logout: logout\n      },\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QcPEkF89rd+kn6m2x6kk6a/l/C0=\", false, function () {\n  return [useAuth];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/malek/Desktop/web/react-try/descovery/src/app.js"],"names":["React","useAuth","AuthContext","ConnectAdmin","ConnectSup","Body","NavigationBar","LogIn","All","Route","BrowserRouter","Router","Switch","App","token","login","logout","EmployeeId","routes","typeEmployee","isLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,KAAT,EAAgBC,aAAa,IAAIC,MAAjC,EAAyCC,MAAzC,QAAuD,kBAAvD;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,MAAuChB,OAAO,EAApD;AACA,MAAIiB,MAAJ;;AAEA,MAAIJ,KAAJ,EAAW;AACT,YAAQG,UAAU,CAACE,YAAnB;AACE,WAAK,gBAAL;AACED,QAAAA,MAAM,gBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAAT;AACA,eAAOA,MAAP;;AACF,WAAK,aAAL;AACEA,QAAAA,MAAM,gBACJ,QAAC,MAAD;AAAA,iCACE,QAAC,MAAD;AAAA,oCAEI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,GAAZ;AAAgB,cAAA,KAAK,MAArB;AAAsB,cAAA,SAAS,EAAEd;AAAjC;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,cAAA,KAAK,MAAzB;AAA0B,cAAA,SAAS,EAAEI;AAArC;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAUA,eAAOU,MAAP;;AACF,WAAK,OAAL;AACEA,QAAAA,MAAM,gBAAG,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBAAT;AACA,eAAOA,MAAP;;AACF;AACE,eAAQA,MAAM,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAjB;AApBJ;AAsBD,GAvBD,MAuBO;AACLA,IAAAA,MAAM,gBAAG,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAT;AACD;;AACD,sBACE;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AACLE,QAAAA,UAAU,EAAE,CAAC,CAACN,KADT;AAELA,QAAAA,KAAK,EAAEA,KAFF;AAGLG,QAAAA,UAAU,EAAEA,UAHP;AAILF,QAAAA,KAAK,EAAEA,KAJF;AAKLC,QAAAA,MAAM,EAAEA;AALH,OADT;AAAA,6BASE;AAAA,kBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA7CQL,G;UACsCZ,O;;;KADtCY,G;AA8CT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\r\nimport useAuth from \"./hooks/auth-hook\";\r\nimport { AuthContext } from \"./context/authContext\";\r\nimport ConnectAdmin from \"./coach/connectAdmin\";\r\nimport ConnectSup from \"./coach/connectSup\";\r\nimport Body from \"./components/Body\";\r\nimport NavigationBar from \"./components/navigationBar\";\r\nimport LogIn from \"./coach/LogInEmployee\";\r\nimport All from \"./components/all\";\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nfunction App() {\r\n  const { token, login, logout, EmployeeId } = useAuth();\r\n  let routes;\r\n\r\n  if (token) {\r\n    switch (EmployeeId.typeEmployee) {\r\n      case \"Administrateur\":\r\n        routes = <ConnectAdmin />;\r\n        return routes;\r\n      case \"Superviseur\":\r\n        routes = (\r\n          <Router>\r\n            <Switch>\r\n                \r\n                <Route path=\"/\" exact component={ConnectSup} />\r\n                <Route path=\"/home\" exact component={All} />\r\n              \r\n            </Switch>\r\n          </Router>\r\n        );\r\n        return routes;\r\n      case \"Coach\":\r\n        routes = <All />;\r\n        return routes;\r\n      default:\r\n        return (routes = <div>error </div>);\r\n    }\r\n  } else {\r\n    routes = <LogIn />;\r\n  }\r\n  return (\r\n    <div>\r\n      <AuthContext.Provider\r\n        value={{\r\n          isLoggedIn: !!token,\r\n          token: token,\r\n          EmployeeId: EmployeeId,\r\n          login: login,\r\n          logout: logout,\r\n        }}\r\n      >\r\n        <main>{routes}</main>\r\n      </AuthContext.Provider>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}